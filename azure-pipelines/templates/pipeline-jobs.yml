#    Carpenter - A cross-platform dotnet (.NET) build process helper.
#    Copyright © 2015-2019 Nosnitor Corporation, All rights reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is
#    furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE.

# SPDX-License-Identifier: MIT

#
# Pipeline definition for Azure Pipelines.
#

parameters:
  solutionName: solution
  sonarQubeProjectKey: ''
  versionFile: ''

jobs:
- job: Prepare
  displayName: Prepare for build

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - bash: |
      echo "##vso[task.setvariable variable=Carpenter.SolutionName;isOutput=true]${{ parameters.solutionName }}"
      echo "##vso[task.setvariable variable=Carpenter.SonarQube.ProjectKey;isOutput=true]${{ parameters.sonarQubeProjectKey }}"
      echo "##vso[task.setvariable variable=Carpenter.Version.VersionFile;isOutput=true]${{ parameters.versionFile }}"
    displayName: Configure pipeline variables
    name: configureVariables
  
  - bash: |
      # get version prefix from VERSION file
      if [ -z "$CARPENTER_VERSION_VERSIONFILE" ]; then
        echo "##vso[task.logissue type=warning;]Carpenter.Version.VersionFile (CARPENTER_VERSION_VERSIONFILE) variable has not been defined. Using version 0.1.0."
        VERSIONPREFIX=0.1.0
      else
        VERSIONFILEPATH=$BUILD_SOURCESDIRECTORY/$CARPENTER_VERSION_VERSIONFILE
        if [[ -f "$VERSIONFILEPATH" ]]; then
          echo "Using VERSION file $VERSIONFILEPATH"
          VERSIONPREFIX=`cat $VERSIONFILEPATH`
          # TODO: Read file
        else
          echo "##vso[task.logissue type=error;]Could not locate version file. File not found: $VERSIONFILEPATH"
          echo "##vso[task.complete result=failed;]Could not locate version file."
        fi
      fi
      echo "##vso[task.setvariable variable=Carpenter.Version.Prefix;isOutput=true]$VERSIONPREFIX"
    displayName: Determine build number
    name: determineBuildNumber


- job: Build
  displayName: Build test and analyze solution

  dependsOn: Prepare

  variables:
    "Carpenter.SolutionName": $[ dependencies.Prepare.outputs['configureVariables.Carpenter.SolutionName'] ]
    "Carpenter.SonarQube.ProjectKey": $[ dependencies.Prepare.outputs['configureVariables.Carpenter.SonarQube.ProjectKey'] ]
    "Carpenter.Version.VersionFile" : $[ dependencies.Prepare.outputs['configureVariables.Carpenter.Version.VersionFile'] ]
    "Carpenter.Version.Prefix" : $[ dependencies.Prepare.outputs['determineBuildNumber.Carpenter.Version.Prefix'] ]

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - template: display-variables-build-step.yml
  - template: display-variables-pipeline-step.yml
  - template: display-variables-system-step.yml
  - template: display-variables-agent-step.yml
  # TODO: Only display when job is deployment job
  - template: display-variables-deployment-step.yml
  - template: display-variables-carpenter-step.yml
